diff -urwE '--exclude=*.patch' '--exclude=*.fix.java' /mnt/d4j_bug_info/buggyfiles/mockito/mockito_38_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java /mnt/D4JPatches/Manual2023/patches_correct/Mockito/Mockito_38/Mockito_38_kPAR/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
--- /mnt/d4j_bug_info/buggyfiles/mockito/mockito_38_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java	2022-11-20 04:09:31.000000000 -0800
+++ /mnt/D4JPatches/Manual2023/patches_correct/Mockito/Mockito_38/Mockito_38_kPAR/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java	2023-11-13 22:37:06.000000000 -0800
@@ -6,7 +6,6 @@
 
 import java.util.LinkedList;
 import java.util.List;
-
 import org.hamcrest.Matcher;
 import org.hamcrest.StringDescription;
 import org.mockito.internal.matchers.ContainsExtraTypeInformation;
@@ -21,14 +20,10 @@
         if (matchers.size() != arguments.length) {
             return new Integer[0];
         }
-        
         List<Integer> suspicious = new LinkedList<Integer>();
         int i = 0;
         for (Matcher m : matchers) {
-            if (m instanceof ContainsExtraTypeInformation 
-                    && !safelyMatches(m, arguments[i]) 
-                    && toStringEquals(m, arguments[i])
-                    && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
+            if (m instanceof ContainsExtraTypeInformation && !safelyMatches(m, arguments[i]) && toStringEquals(m, arguments[i]) && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {
                 suspicious.add(i);
             }
             i++;
@@ -45,6 +40,9 @@
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
+        if (arg == null) {
+            return false;
+        }
         return StringDescription.toString(m).equals(arg.toString());
     }
 }
